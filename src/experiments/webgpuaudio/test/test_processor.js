import GPUProcessor from "../gpu-processor.js";
import IRHelper from "../ir-helper.js"

/**
 * A simple class to unit-test various functionalities of WebGPUAudio
 * and post failures to the console. Tests can be run from
 * http://localhost:8080/experiments/webgpuaudio/test/.
 * 
 * Add the actual test code here. To set up the html page, head over to
 * test_page_handler.js and set up the code.
 *
 * @class TestProcessor
 */
class TestProcessor {
    constructor() {}

    /**
     * Tests that WebGPU convolution logic works by passing in an impulse response
     * and verifying that the IR function generated by the IRHelper works.
     * @returns {boolean}
     */
    async testConvolution() {
        const test_ir = IRHelper.createTestIR();
        let gpuProcessor = new GPUProcessor();
        gpuProcessor.setIRArray(test_ir);
        await gpuProcessor.initialize();

        // Create impulse function.
        const input = new Float32Array(20);
        input[0] = 1;

        // Process convolution.
        const output_result = await gpuProcessor.processConvolution(input);

        // Parse outputs.
        const output_ir_size = output_result.slice(0, test_ir.length);
        const assert_outputs = output_ir_size.toString() === test_ir.toString();

        // Verify.
        console.assert(assert_outputs, "Test: testConvolution, Expected output: ["+test_ir.toString()+"] \nReceived output: ["+output_ir_size.toString()+"].\n", "See TestProcessor.testConvolution() in test_processor.js for more information.");
        return assert_outputs;
    }
};

export default TestProcessor;